/*
 * This file was automatically generated by EvoSuite
 * Sun May 14 22:40:17 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(6, 6, 6, 6, 6, "Millisecond", "Millisecond");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t6/6/6 at 6:6am ,Millisecond, Millisecond\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 23, 23, "~", "~");
      assertEquals(23, appt0.getStartDay());
      assertEquals("~", appt0.getDescription());
      assertEquals(23, appt0.getStartMonth());
      assertEquals(23, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(23, appt0.getStartHour());
      assertEquals(23, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(109, 109, 109, 109, 109, "9R| F:|M", "9R| F:|M");
      boolean boolean0 = appt0.getValid();
      assertEquals("9R| F:|M", appt0.getTitle());
      assertEquals("9R| F:|M", appt0.getDescription());
      assertEquals(109, appt0.getStartDay());
      assertEquals(109, appt0.getStartMinute());
      assertEquals(109, appt0.getStartMonth());
      assertFalse(boolean0);
      assertEquals(109, appt0.getStartYear());
      assertEquals(109, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 11, (-3844), 0, "Id", "wHr%:p5|'4bOlCH");
      int int0 = appt0.getStartYear();
      assertFalse(appt0.getValid());
      assertEquals(11, appt0.getStartDay());
      assertEquals(-3844, appt0.getStartMonth());
      assertEquals("wHr%:p5|'4bOlCH", appt0.getDescription());
      assertEquals(59, appt0.getStartHour());
      assertEquals(0, int0);
      assertEquals(59, appt0.getStartMinute());
      assertEquals("Id", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, 0, 814, "_XV/_Ud!", "_XV/_Ud!");
      int int0 = appt0.getStartYear();
      assertEquals(31, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(814, int0);
      assertEquals("_XV/_Ud!", appt0.getDescription());
      assertEquals("_XV/_Ud!", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(124, 124, 0, 0, 0, "ruX3f%F", "ruX3f%F");
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
      assertEquals("ruX3f%F", appt0.getDescription());
      assertEquals(0, appt0.getStartDay());
      assertEquals(124, appt0.getStartMinute());
      assertEquals(124, appt0.getStartHour());
      assertEquals("ruX3f%F", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(11, 2343, 2077, (-102), 2343, "o?X-#;=ikg!B}", "o?X-#;=ikg!B}");
      int int0 = appt0.getStartMonth();
      assertEquals((-102), int0);
      assertEquals(2077, appt0.getStartDay());
      assertEquals(2343, appt0.getStartMinute());
      assertEquals(2343, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("o?X-#;=ikg!B}", appt0.getTitle());
      assertEquals(11, appt0.getStartHour());
      assertEquals("o?X-#;=ikg!B}", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 59, 0, "f LGK.Q&x-", "8");
      int int0 = appt0.getStartMinute();
      assertEquals("f LGK.Q&x-", appt0.getTitle());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("8", appt0.getDescription());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(100, 100, 100, 0, 100, "", "v>{C\"zDNC*l<ra");
      int int0 = appt0.getStartMinute();
      assertEquals(100, int0);
      assertEquals("v>{C\"zDNC*l<ra", appt0.getDescription());
      assertEquals("", appt0.getTitle());
      assertEquals(100, appt0.getStartDay());
      assertEquals(100, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(100, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 25, (-766), 25, 25, "HMS", "HMS");
      int int0 = appt0.getStartHour();
      assertEquals("HMS", appt0.getDescription());
      assertEquals(0, int0);
      assertEquals(25, appt0.getStartMinute());
      assertEquals(-766, appt0.getStartDay());
      assertEquals(25, appt0.getStartYear());
      assertEquals("HMS", appt0.getTitle());
      assertEquals(25, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(11, 0, 0, 11, 11, "", "");
      int int0 = appt0.getStartHour();
      assertEquals(11, int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(11, 0, 0, 11, 11, "", "");
      int int0 = appt0.getStartDay();
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartHour());
      assertEquals(11, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(345, 31, (-2764), 31, (-2764), "", "");
      int int0 = appt0.getStartDay();
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartMonth());
      assertEquals(-2764, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals((-2764), int0);
      assertEquals(345, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(252, 252, 252, 252, 252, (String) null, (String) null);
      String string0 = appt0.getDescription();
      assertEquals(252, appt0.getStartYear());
      assertEquals(252, appt0.getStartHour());
      assertEquals(252, appt0.getStartDay());
      assertEquals(252, appt0.getStartMinute());
      assertNotNull(string0);
      assertEquals(252, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(14, 14, 14, 14, 0, "]MFY. X*^OKi.;", "]MFY. X*^OKi.;");
      appt0.setDescription("]MFY. X*^OKi.;");
      assertEquals(0, appt0.getStartYear());
      assertEquals(14, appt0.getStartMonth());
      assertEquals(14, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(14, appt0.getStartHour());
      assertEquals("]MFY. X*^OKi.;", appt0.getDescription());
      assertEquals(14, appt0.getStartDay());
      assertEquals("]MFY. X*^OKi.;", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(44, 44, 44, 44, 44, "+27UEk$S+[w3o", (String) null);
      assertEquals("+27UEk$S+[w3o", appt0.getTitle());
      
      appt0.setTitle((String) null);
      appt0.getTitle();
      assertEquals("", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-1814), (-1814), ":Hf{(WjElN", ":Hf{(WjElN");
      String string0 = appt0.getTitle();
      assertFalse(appt0.getValid());
      assertEquals(":Hf{(WjElN", string0);
      assertEquals(12, appt0.getStartDay());
      assertEquals(12, appt0.getStartMinute());
      assertEquals(-1814, appt0.getStartMonth());
      assertEquals(-1814, appt0.getStartYear());
      assertEquals(":Hf{(WjElN", appt0.getDescription());
      assertEquals(12, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 0, "H\"esF|Vs~PZLQo>0|G", "'blT$?}<XI(-");
      int int0 = appt0.getStartDay();
      assertTrue(appt0.getValid());
      assertEquals("'blT$?}<XI(-", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, int0);
      assertEquals(1, appt0.getStartMinute());
      assertEquals(1, appt0.getStartMonth());
      assertEquals("H\"esF|Vs~PZLQo>0|G", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 0, "H\"esF|Vs~PZLQo>0|G", "'blT$?}<XI(-");
      boolean boolean0 = appt0.getValid();
      assertEquals(1, appt0.getStartDay());
      assertTrue(boolean0);
      assertEquals(1, appt0.getStartMinute());
      assertEquals(1, appt0.getStartMonth());
      assertEquals(1, appt0.getStartHour());
      assertEquals("'blT$?}<XI(-", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals("H\"esF|Vs~PZLQo>0|G", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-2340), 31, 1337, 31, (-2340), "]&Av2'Uu|T|p`p", "]&Av2'Uu|T|p`p");
      int int0 = appt0.getStartHour();
      assertFalse(appt0.getValid());
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartMonth());
      assertEquals("]&Av2'Uu|T|p`p", appt0.getDescription());
      assertEquals((-2340), int0);
      assertEquals(-2340, appt0.getStartYear());
      assertEquals(1337, appt0.getStartDay());
      assertEquals("]&Av2'Uu|T|p`p", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-534), (-534), (-534), 4088, (-3051), "W#v&Fci+].]Vc?", "");
      int int0 = appt0.getStartMinute();
      assertEquals(4088, appt0.getStartMonth());
      assertEquals(-3051, appt0.getStartYear());
      assertEquals("W#v&Fci+].]Vc?", appt0.getTitle());
      assertEquals((-534), int0);
      assertEquals(-534, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals(-534, appt0.getStartDay());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 0, "H\"esF|Vs~PZLQo>0|G", "'blT$?}<XI(-");
      int int0 = appt0.getStartMonth();
      assertTrue(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals("'blT$?}<XI(-", appt0.getDescription());
      assertEquals(1, appt0.getStartMinute());
      assertEquals("H\"esF|Vs~PZLQo>0|G", appt0.getTitle());
      assertEquals(1, int0);
      assertEquals(1, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 27, 0, 0, "E", "E");
      String string0 = appt0.toString();
      assertNull(string0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("E", appt0.getDescription());
      assertEquals("E", appt0.getTitle());
      assertEquals(27, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(1, 550, 1, 1, 550, "BX2^Q", "BX2^Q");
      String string0 = appt0.getDescription();
      assertEquals("BX2^Q", string0);
      assertEquals(1, appt0.getStartHour());
      assertEquals(550, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("BX2^Q", appt0.getTitle());
      assertEquals(1, appt0.getStartDay());
      assertEquals(550, appt0.getStartYear());
      assertEquals(1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1674), 892, (-1674), (-120), "-zi.)RyzX/%", "-zi.)RyzX/%");
      int int0 = appt0.getStartYear();
      assertEquals(-1674, appt0.getStartMinute());
      assertEquals(-1674, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals("-zi.)RyzX/%", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals(892, appt0.getStartDay());
      assertEquals("-zi.)RyzX/%", appt0.getTitle());
      assertEquals((-120), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(567, 567, 567, 567, 118, " ,", " ,");
      appt0.setTitle("sto~2L8H2(ZoC|`$-p");
      assertEquals("sto~2L8H2(ZoC|`$-p", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt((-1498), 700, (-1498), 700, (-1498), (String) null, (String) null);
      appt0.setDescription((String) null);
      assertEquals(700, appt0.getStartMonth());
      assertEquals(700, appt0.getStartMinute());
      assertEquals(-1498, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1498, appt0.getStartHour());
      assertEquals(-1498, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 0, 59, Integer.MAX_VALUE, "*6|8", "[sD2f(a5T`O");
      assertEquals(59, appt0.getStartMinute());
      
      appt0.setStartMinute(0);
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(16, 16, 1462, 16, 1462, "L3WbvxUf75USLPF", "L3WbvxUf75USLPF");
      assertEquals(1462, appt0.getStartYear());
      
      appt0.setStartYear(16);
      assertEquals(16, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 0, "H\"esF|Vs~PZLQo>0|G", "'blT$?}<XI(-");
      appt0.setStartDay(12);
      assertEquals(12, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(13, 13, 13, 13, 13, "LWbvxUfZ5USfLP)F", "LWbvxUfZ5USfLP)F");
      appt0.setStartHour(13);
      assertEquals(13, appt0.getStartMinute());
      assertEquals(13, appt0.getStartMonth());
      assertEquals(13, appt0.getStartDay());
      assertEquals("LWbvxUfZ5USfLP)F", appt0.getDescription());
      assertEquals(13, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(13, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 27, 0, 0, "E", "E");
      assertEquals(0, appt0.getStartMonth());
      
      appt0.setStartMonth(27);
      assertEquals(27, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "o&bn`SYb2s5S", "o&bn`SYb2s5S");
      String string0 = appt0.toString();
      assertEquals("\t11/11/11 at 11:11am ,o&bn`SYb2s5S, o&bn`SYb2s5S\n", string0);
      assertNotNull(string0);
  }
}
